library(rentrez)
myterm <- "Gawande AA[Author]"
q <- entrez_search("pubmed", myterm, retmax = 9999)
q$count
q$retmax
q
summary(q)
q$ids
df <- data.frame(Author=myterm, Total.Pubs = q$ids)
df <- data.frame(Author=myterm, Total.Pubs = q$count)
author <- "Gawande AA"
myterm <- paste("'", author, "'[Author]", sep="")
df <- data.frame(Author=author, Total.Pubs = q$count)
df$Total.Pubs <- as.numeric(df$Total.Pubs)
df <- data.frame(Author=author, Total.Pubs = q$count)
df <- data.frame(Author=author, Total.Pubs = as.numeric(q$count))
author2 <- "Oz MC"
myterm2 <- paste("'", author2, "'[Author]", sep="")
q2 <- entrez_search("pubmed", myterm2, retmax = 9999)
myterm2 <- paste("'", author2, "'[Author]", sep="")
author2 <- "Oz MC"
myterm2 <- paste("'", author2, "'[Author]", sep="")
q2 <- entrez_search("pubmed", myterm2, retmax = 9999)
author2 <- "Oz MC"
myterm2 <- paste("'", author2, "'[Author]", sep="")
q2 <- entrez_search("pubmed", myterm2, retmax = 9999)
author <- "Gawande AA"
myterm <- paste(author, "[Author]", sep="")
q <- entrez_search("pubmed", myterm, retmax = 9999)
q$ids
q$count
df <- data.frame(Author=author, Total.Pubs = as.numeric(q$count))
author2 <- "Oz MC"
myterm2 <- paste(author2, "[Author]", sep="")
q2 <- entrez_search("pubmed", myterm2, retmax = 9999)
df2 <- data.frame(Author=author2, Total.Pubs = as.numeric(q2$count))
combo_df <- rbind(df,df2)
g <-
ggplot(combo_df, aes(x=Author, y=Total.Pubs)) +
geom_bar() +
ggtitle("Pubmed Publication Authorship Comparison")
library(ggplot2)
g <-
ggplot(combo_df, aes(x=Author, y=Total.Pubs)) +
geom_bar() +
ggtitle("Pubmed Publication Authorship Comparison")
g
g <-
ggplot(combo_df, aes(x=Author, y=Total.Pubs)) +
geom_bar(stat = "identity") +
ggtitle("Pubmed Publication Authorship Comparison")
g
source('~/Sites/Shiny/shinyandnew/ppa/scratch.R', echo=TRUE)
library(shiny)
?selectInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?actionButton
actionButton(inputId = "Submit", label="Search")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
author <- "Gawande AA"
myterm <- paste(author, "[Author]", sep="")
q <- entrez_search("pubmed", myterm, retmax = 9999)
q$ids
q$count
df <- data.frame(Author=author, Total.Publications = as.numeric(q$count))
author2 <- "Oz MC"
myterm2 <- paste(author2, "[Author]", sep="")
q2 <- entrez_search("pubmed", myterm2, retmax = 9999)
df2 <- data.frame(Author=author2, Total.Publications = as.numeric(q2$count))
combo_df <- rbind(df,df2)
library(ggplot2)
g <-
ggplot(combo_df, aes(x=Author, y=Total.Publications)) +
geom_bar(stat = "identity") +
ggtitle("Pubmed Publication Authorship Comparison")
g
shiny::runApp()
?eventReactive
shiny::runApp()
shiny::runApp()
library(shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
choices = c("Gawande AA",
"Oz MC",
"Kevorkian J")
choices = c("Gawande AA"="a",
"Oz MC"="b",
"Kevorkian J"="c")
shiny::runApp()
shiny::runApp()
author_vec <- c("Gawande","purple","rain")
names(author_vec) <- c("a","b","c")
shiny::runApp()
shiny::runApp()
authors <- read.csv("authors.csv", stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", stringsAsFactors = FALSE)
names(authors$search_name) <- authors$display_name
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
authors <- read.csv("authors.csv", stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", stringsAsFactors = FALSE)
shiny::runApp()
authors <- read.csv("authors.csv", stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=FALSE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv")
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv", header=TRUE,stringsAsFactors = FALSE)
authors <- read.csv("authors.csv",stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
